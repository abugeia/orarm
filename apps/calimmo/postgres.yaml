---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgres-config
  namespace: calimmo
data:
  POSTGRES_DB: "immodb"
  POSTGRES_USER: "immo_user"

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pvc
  namespace: calimmo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi 
  storageClassName: "nfs-csi"  # Utilise NFS avec expansion de volume

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: calimmo
  labels:
    app: postgres
spec:
  replicas: 1  # PostgreSQL ne supporte pas le scale horizontal
  selector:
    matchLabels:
      app: postgres
  strategy:
    type: Recreate  # Important pour PostgreSQL avec PV
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
      - name: postgres
        image: postgres:18-alpine
        ports:
        - containerPort: 5432
          name: postgres
        env:
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_DB
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: pg-calimmo-secrets
              key: POSTGRES_PASSWORD
        - name: PGDATA
          value: /var/lib/postgresql/18/docker
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/postgresql
          subPath: postgres  # Évite les problèmes de permissions
        resources:
          # requests:
          #   memory: "256Mi"
          #   cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - pg_isready -U $POSTGRES_USER -d $POSTGRES_DB
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
        securityContext:
          runAsUser: 999  # User postgres dans l'image alpine
          runAsGroup: 999
          fsGroup: 999
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: calimmo
  labels:
    app: postgres
spec:
  selector:
    app: postgres
  ports:
  - name: postgres
    port: 5432
    targetPort: 5432
    protocol: TCP
  type: ClusterIP